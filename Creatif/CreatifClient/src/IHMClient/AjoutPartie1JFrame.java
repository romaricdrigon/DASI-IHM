/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AjoutJFrame.java
 *
 * Created on 28 févr. 2012, 17:00:47
 */
package IHMClient;

import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import modele.Oeuvre;
import service.Service;

/**
 *
 * @author Administrateur
 */
public class AjoutPartie1JFrame extends JFrame
{

    protected Service service;

    /** Creates new form AjoutJFrame */
    public AjoutPartie1JFrame()
    {
        service = new Service();
        initComponents();

        //Préparation de la table
        List<Oeuvre> oeuvres = service.rechercherToutesOeuvres();
        tableauOeuvres.setModel(new ModelOeuvres(oeuvres));
        computeBounds();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButtonAccueil = new javax.swing.JButton();
        jButtonAjoutOeuvre = new javax.swing.JButton();
        jButtonConsultation = new javax.swing.JButton();
        jLabelTitre = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelRechercher = new javax.swing.JLabel();
        champRechercher = new javax.swing.JTextField();
        boutonRechercher = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableauOeuvres = new javax.swing.JTable();
        jButtonSuivant = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Creat'IF");
        setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage("art2.png"));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButtonAccueil.setText("Accueil");
        jButtonAccueil.setFocusable(false);
        jButtonAccueil.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAccueil.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonAccueil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAccueilActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonAccueil);

        jButtonAjoutOeuvre.setText("Ajouter une oeuvre");
        jButtonAjoutOeuvre.setEnabled(false);
        jButtonAjoutOeuvre.setFocusable(false);
        jButtonAjoutOeuvre.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAjoutOeuvre.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButtonAjoutOeuvre);

        jButtonConsultation.setText("Consulter le planning");
        jButtonConsultation.setFocusable(false);
        jButtonConsultation.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonConsultation.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonConsultation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultationActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonConsultation);

        jLabelTitre.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabelTitre.setText("Ajouter une oeuvre");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setText("Rechercher une oeuvre");

        jLabelRechercher.setText("Nom :");

        champRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                champRechercherActionPerformed(evt);
            }
        });

        boutonRechercher.setText("Recherche");
        boutonRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonRechercherActionPerformed(evt);
            }
        });

        tableauOeuvres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Nom", "Artiste"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableauOeuvres);

        jButtonSuivant.setText("Suivant");
        jButtonSuivant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSuivantActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(jLabelTitre)
                .addContainerGap(206, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jLabel2)
                .addContainerGap(341, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabelRechercher)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(champRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(boutonRechercher)
                            .addComponent(jButtonSuivant)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabelTitre)
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRechercher)
                    .addComponent(champRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boutonRechercher)
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jButtonSuivant))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSuivantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSuivantActionPerformed
        new AjoutPartie2JFrame().setVisible(true);
        dispose();
}//GEN-LAST:event_jButtonSuivantActionPerformed

    private void boutonRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonRechercherActionPerformed
        List<Oeuvre> oeuvres = service.rechercherOeuvreParNom(this.champRechercher.getText());
        tableauOeuvres.setModel(new ModelOeuvres(oeuvres));
}//GEN-LAST:event_boutonRechercherActionPerformed

    private void champRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_champRechercherActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_champRechercherActionPerformed

    private void jButtonAccueilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAccueilActionPerformed
        new AccueilJFrame().setVisible(true);
        dispose();
}//GEN-LAST:event_jButtonAccueilActionPerformed

    private void jButtonConsultationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultationActionPerformed
        JOptionPane.showMessageDialog(null, "Fonctionnalité non implémentée");
}//GEN-LAST:event_jButtonConsultationActionPerformed

    /**
     * @param args the command line arguments
     *
    public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
    new AjoutPartie1JFrame().setVisible(true);
    }
    });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boutonRechercher;
    private javax.swing.JTextField champRechercher;
    private javax.swing.JButton jButtonAccueil;
    private javax.swing.JButton jButtonAjoutOeuvre;
    private javax.swing.JButton jButtonConsultation;
    private javax.swing.JButton jButtonSuivant;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelRechercher;
    private javax.swing.JLabel jLabelTitre;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tableauOeuvres;
    // End of variables declaration//GEN-END:variables

    class ModelOeuvres extends AbstractTableModel
    {

        Object donnees[][];
        String titres[] =
        {
            "Id", "Nom", "Artiste"
        };

        public ModelOeuvres(List<Oeuvre> oeuvres)
        {
            donnees = new Object[oeuvres.size()][titres.length];
            for (int i = 0; i < oeuvres.size(); i++)
            {
                Oeuvre uneOeuvre = oeuvres.get(i);
                donnees[i][0] = uneOeuvre.getOeuvreId();
                donnees[i][1] = uneOeuvre.getNom();
                donnees[i][2] = uneOeuvre.getArtiste().getNom();
            }
        }

        public int getRowCount()
        {
            return donnees.length;
        }

        public int getColumnCount()
        {
            return titres.length;
        }

        public Object getValueAt(int rowIndex, int columnIndex)
        {
            return donnees[rowIndex][columnIndex];
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex)
        {
            return false;
        }

        @Override
        public String getColumnName(int col)
        {
            return titres[col];
        }

    }

    private void computeBounds()
    {
        Rectangle screen = GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds();
        Rectangle actualScreen = getBounds();
        Rectangle bounds = new Rectangle((int) (screen.getWidth() - actualScreen.getWidth()) / 2, (int) (screen.getHeight() - actualScreen.getHeight()) / 2, (int) actualScreen.getWidth(), (int) actualScreen.getHeight());

        setBounds(bounds);
    }

}
